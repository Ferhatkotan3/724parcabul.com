{"version":3,"file":"CategoriesPage-CR-L9wYw.js","sources":["../../src/pages/categories/CategoriesPage.tsx"],"sourcesContent":["\nimport { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useStore } from '../../store/useStore';\nimport { supabase } from '../../lib/supabase';\nimport ProductCard from '../../components/product/ProductCard';\nimport LoadingSpinner from '../../components/common/LoadingSpinner';\nimport { mockProducts } from '../../mocks/products';\nimport { mockCategories } from '../../mocks/categories';\n\ninterface Product {\n  id: string;\n  part_code: string;\n  name: string;\n  description: string;\n  price: number;\n  stock: number;\n  image_url: string;\n  category_id: string;\n}\n\ninterface Category {\n  id: string;\n  name: string;\n  slug: string;\n}\n\nexport default function CategoriesPage() {\n  const { isDarkMode } = useStore();\n  const [categories, setCategories] = useState<Category[]>([]);\n  const [products, setProducts] = useState<Product[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedCategory, setSelectedCategory] = useState<string>('all');\n  const [priceRange, setPriceRange] = useState<[number, number]>([0, 5000]);\n  const [inStockOnly, setInStockOnly] = useState(false);\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    try {\n      // Try to fetch from Supabase first, fallback to mock data\n      const { data: categoriesData } = await supabase\n        .from('categories')\n        .select('*');\n\n      const { data: productsData } = await supabase\n        .from('products')\n        .select('*');\n\n      setCategories(categoriesData || mockCategories);\n      setProducts(productsData || mockProducts);\n    } catch (error) {\n      // Fallback to mock data if Supabase is not configured\n      setCategories(mockCategories);\n      setProducts(mockProducts);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const filteredProducts = products.filter(product => {\n    const categoryMatch = selectedCategory === 'all' || product.category_id === selectedCategory;\n    const priceMatch = product.price >= priceRange[0] && product.price <= priceRange[1];\n    const stockMatch = !inStockOnly || product.stock > 0;\n    \n    return categoryMatch && priceMatch && stockMatch;\n  });\n\n  if (loading) {\n    return (\n      <div className={`min-h-screen ${isDarkMode ? 'bg-gray-900' : 'bg-white'} py-8`}>\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <LoadingSpinner size=\"lg\" className=\"py-20\" />\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className={`min-h-screen ${isDarkMode ? 'bg-gray-900' : 'bg-white'} py-8`}>\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        {/* Header */}\n        <div className=\"mb-8\">\n          <h1 className={`text-3xl font-bold ${isDarkMode ? 'text-white' : 'text-gray-900'} mb-4`}>\n            Kategoriler\n          </h1>\n          <p className={`text-lg ${isDarkMode ? 'text-gray-400' : 'text-gray-600'}`}>\n            İhtiyacınız olan yedek parçayı kategorilere göre bulun\n          </p>\n        </div>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-8\">\n          {/* Filters Sidebar */}\n          <div className=\"lg:col-span-1\">\n            <div className={`p-6 rounded-lg border ${isDarkMode ? 'bg-gray-800 border-gray-700' : 'bg-white border-gray-200'} sticky top-8`}>\n              <h2 className={`text-lg font-semibold ${isDarkMode ? 'text-white' : 'text-gray-900'} mb-4`}>\n                Filtreler\n              </h2>\n\n              {/* Category Filter */}\n              <div className=\"mb-6\">\n                <h3 className={`text-sm font-medium ${isDarkMode ? 'text-white' : 'text-gray-900'} mb-3`}>\n                  Kategori\n                </h3>\n                <div className=\"space-y-2\">\n                  <label className=\"flex items-center\">\n                    <input\n                      type=\"radio\"\n                      name=\"category\"\n                      value=\"all\"\n                      checked={selectedCategory === 'all'}\n                      onChange={(e) => setSelectedCategory(e.target.value)}\n                      className=\"text-blue-600 focus:ring-blue-500\"\n                    />\n                    <span className={`ml-2 text-sm ${isDarkMode ? 'text-gray-300' : 'text-gray-700'}`}>\n                      Tüm Kategoriler ({products.length})\n                    </span>\n                  </label>\n                  {categories.map((category) => {\n                    const count = products.filter(p => p.category_id === category.id).length;\n                    return (\n                      <label key={category.id} className=\"flex items-center\">\n                        <input\n                          type=\"radio\"\n                          name=\"category\"\n                          value={category.id}\n                          checked={selectedCategory === category.id}\n                          onChange={(e) => setSelectedCategory(e.target.value)}\n                          className=\"text-blue-600 focus:ring-blue-500\"\n                        />\n                        <span className={`ml-2 text-sm ${isDarkMode ? 'text-gray-300' : 'text-gray-700'}`}>\n                          {category.name} ({count})\n                        </span>\n                      </label>\n                    );\n                  })}\n                </div>\n              </div>\n\n              {/* Price Range Filter */}\n              <div className=\"mb-6\">\n                <h3 className={`text-sm font-medium ${isDarkMode ? 'text-white' : 'text-gray-900'} mb-3`}>\n                  Fiyat Aralığı\n                </h3>\n                <div className=\"space-y-3\">\n                  <div className=\"flex items-center space-x-2\">\n                    <input\n                      type=\"number\"\n                      value={priceRange[0]}\n                      onChange={(e) => setPriceRange([parseInt(e.target.value) || 0, priceRange[1]])}\n                      className={`w-20 px-2 py-1 text-sm border rounded ${\n                        isDarkMode \n                          ? 'bg-gray-700 border-gray-600 text-white' \n                          : 'bg-white border-gray-300 text-gray-900'\n                      }`}\n                      placeholder=\"Min\"\n                    />\n                    <span className={`${isDarkMode ? 'text-gray-400' : 'text-gray-500'}`}>-</span>\n                    <input\n                      type=\"number\"\n                      value={priceRange[1]}\n                      onChange={(e) => setPriceRange([priceRange[0], parseInt(e.target.value) || 5000])}\n                      className={`w-20 px-2 py-1 text-sm border rounded ${\n                        isDarkMode \n                          ? 'bg-gray-700 border-gray-600 text-white' \n                          : 'bg-white border-gray-300 text-gray-900'\n                      }`}\n                      placeholder=\"Max\"\n                    />\n                    <span className={`text-sm ${isDarkMode ? 'text-gray-400' : 'text-gray-500'}`}>₺</span>\n                  </div>\n                </div>\n              </div>\n\n              {/* Stock Filter */}\n              <div className=\"mb-6\">\n                <label className=\"flex items-center\">\n                  <input\n                    type=\"checkbox\"\n                    checked={inStockOnly}\n                    onChange={(e) => setInStockOnly(e.target.checked)}\n                    className=\"text-blue-600 focus:ring-blue-500\"\n                  />\n                  <span className={`ml-2 text-sm ${isDarkMode ? 'text-gray-300' : 'text-gray-700'}`}>\n                    Sadece stokta olanlar\n                  </span>\n                </label>\n              </div>\n\n              {/* Clear Filters */}\n              <button\n                onClick={() => {\n                  setSelectedCategory('all');\n                  setPriceRange([0, 5000]);\n                  setInStockOnly(false);\n                }}\n                className={`w-full py-2 px-4 text-sm font-medium rounded-lg border ${\n                  isDarkMode \n                    ? 'border-gray-600 text-gray-300 hover:bg-gray-700' \n                    : 'border-gray-300 text-gray-700 hover:bg-gray-50'\n                }`}\n              >\n                Filtreleri Temizle\n              </button>\n            </div>\n          </div>\n\n          {/* Products Grid */}\n          <div className=\"lg:col-span-3\">\n            <div className=\"flex items-center justify-between mb-6\">\n              <p className={`text-sm ${isDarkMode ? 'text-gray-400' : 'text-gray-600'}`}>\n                {filteredProducts.length} ürün bulundu\n              </p>\n            </div>\n\n            {filteredProducts.length === 0 ? (\n              <div className=\"text-center py-12\">\n                <div className=\"w-24 h-24 mx-auto mb-6\">\n                  <i className={`ri-search-line text-6xl ${isDarkMode ? 'text-gray-600' : 'text-gray-400'}`}></i>\n                </div>\n                <h3 className={`text-lg font-medium ${isDarkMode ? 'text-white' : 'text-gray-900'} mb-2`}>\n                  Ürün Bulunamadı\n                </h3>\n                <p className={`${isDarkMode ? 'text-gray-400' : 'text-gray-600'} mb-4`}>\n                  Arama kriterlerinize uygun ürün bulunamadı. Filtreleri değiştirmeyi deneyin.\n                </p>\n                <button\n                  onClick={() => {\n                    setSelectedCategory('all');\n                    setPriceRange([0, 5000]);\n                    setInStockOnly(false);\n                  }}\n                  className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-lg text-white bg-blue-600 hover:bg-blue-700\"\n                >\n                  Filtreleri Temizle\n                </button>\n              </div>\n            ) : (\n              <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6\">\n                {filteredProducts.map((product) => (\n                  <ProductCard key={product.id} product={product} />\n                ))}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":["CategoriesPage","isDarkMode","useStore","categories","setCategories","useState","products","setProducts","loading","setLoading","selectedCategory","setSelectedCategory","priceRange","setPriceRange","inStockOnly","setInStockOnly","useEffect","fetchData","categoriesData","supabase","productsData","mockCategories","mockProducts","filteredProducts","product","categoryMatch","priceMatch","stockMatch","jsx","LoadingSpinner","jsxs","e","category","count","p","ProductCard"],"mappings":"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"}