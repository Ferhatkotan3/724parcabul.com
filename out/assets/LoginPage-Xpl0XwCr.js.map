{"version":3,"file":"LoginPage-Xpl0XwCr.js","sources":["../../src/pages/auth/LoginPage.tsx"],"sourcesContent":["\n\nimport { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { z } from 'zod';\nimport { useStore } from '../../store/useStore';\nimport { mockUsers } from '../../mocks/users';\nimport toast from 'react-hot-toast';\n\nconst loginSchema = z.object({\n  email: z.string().email('Geçerli bir e-posta adresi girin'),\n  password: z.string().min(6, 'Şifre en az 6 karakter olmalıdır'),\n});\n\ntype LoginForm = z.infer<typeof loginSchema>;\n\nexport default function LoginPage() {\n  const navigate = useNavigate();\n  const { isDarkMode, setUser } = useStore();\n  const [isLoading, setIsLoading] = useState(false);\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<LoginForm>({\n    resolver: zodResolver(loginSchema),\n  });\n\n  const onSubmit = async (data: LoginForm) => {\n    setIsLoading(true);\n    try {\n      // Simulate API call delay\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      \n      // Simple password check with predefined credentials\n      const validCredentials: { [key: string]: { password: string; user: any } } = {\n        'admin@724parcabul.com': {\n          password: 'Admin123!',\n          user: {\n            id: 'admin_001',\n            email: 'admin@724parcabul.com',\n            role: 'admin',\n            full_name: 'Admin Kullanıcı'\n          }\n        },\n        'mehmet.yilmaz@email.com': {\n          password: 'Mehmet123!',\n          user: {\n            id: 'user_001',\n            email: 'mehmet.yilmaz@email.com',\n            role: 'user',\n            full_name: 'Mehmet Yılmaz'\n          }\n        },\n        'ayse.kaya@email.com': {\n          password: 'Ayse123!',\n          user: {\n            id: 'user_002',\n            email: 'ayse.kaya@email.com',\n            role: 'user',\n            full_name: 'Ayşe Kaya'\n          }\n        },\n        'ali.demir@email.com': {\n          password: 'Ali123!',\n          user: {\n            id: 'user_003',\n            email: 'ali.demir@email.com',\n            role: 'user',\n            full_name: 'Ali Demir'\n          }\n        }\n      };\n\n      const credential = validCredentials[data.email];\n      \n      if (!credential) {\n        throw new Error('Bu e-posta adresi ile kayıtlı kullanıcı bulunamadı');\n      }\n\n      if (credential.password !== data.password) {\n        throw new Error('Şifre hatalı');\n      }\n\n      setUser(credential.user);\n\n      toast.success('Başarıyla giriş yapıldı');\n      navigate('/');\n    } catch (error: any) {\n      toast.error(error.message || 'Giriş yapılırken hata oluştu');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleTestLogin = (email: string, password: string) => {\n    const form = document.querySelector('form') as HTMLFormElement;\n    const emailInput = form.querySelector('input[type=\"email\"]') as HTMLInputElement;\n    const passwordInput = form.querySelector('input[type=\"password\"]') as HTMLInputElement;\n    \n    emailInput.value = email;\n    passwordInput.value = password;\n    \n    // Trigger form submission\n    onSubmit({ email, password });\n  };\n\n  return (\n    <div className={`min-h-screen ${isDarkMode ? 'bg-gray-900' : 'bg-gray-50'} flex flex-col justify-center py-12 sm:px-6 lg:px-8`}>\n      <div className=\"sm:mx-auto sm:w-full sm:max-w-md\">\n        <Link to=\"/\" className=\"flex items-center justify-center space-x-2 mb-6\">\n          <div className=\"w-10 h-10 bg-blue-600 rounded-lg flex items-center justify-center\">\n            <i className=\"ri-car-line text-white text-xl\"></i>\n          </div>\n          <span className={`text-2xl font-bold ${isDarkMode ? 'text-white' : 'text-gray-900'}`} style={{ fontFamily: 'Pacifico, serif' }}>\n            724ParcaBul\n          </span>\n        </Link>\n        <h2 className={`text-center text-3xl font-extrabold ${isDarkMode ? 'text-white' : 'text-gray-900'}`}>\n          Hesabınıza giriş yapın\n        </h2>\n        <p className={`mt-2 text-center text-sm ${isDarkMode ? 'text-gray-400' : 'text-gray-600'}`}>\n          Hesabınız yok mu?{' '}\n          <Link to=\"/register\" className=\"font-medium text-blue-600 hover:text-blue-500\">\n            Üye olun\n          </Link>\n        </p>\n      </div>\n\n      <div className=\"mt-8 sm:mx-auto sm:w-full sm:max-w-md\">\n        <div className={`py-8 px-4 shadow sm:rounded-lg sm:px-10 ${isDarkMode ? 'bg-gray-800' : 'bg-white'}`}>\n          <form className=\"space-y-6\" onSubmit={handleSubmit(onSubmit)}>\n            <div>\n              <label htmlFor=\"email\" className={`block text-sm font-medium ${isDarkMode ? 'text-white' : 'text-gray-700'}`}>\n                E-posta adresi\n              </label>\n              <div className=\"mt-1\">\n                <input\n                  {...register('email')}\n                  type=\"email\"\n                  autoComplete=\"email\"\n                  className={`appearance-none block w-full px-3 py-2 border rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm ${\n                    isDarkMode \n                      ? 'bg-gray-700 border-gray-600 text-white' \n                      : 'bg-white border-gray-300 text-gray-900'\n                  } ${errors.email ? 'border-red-500' : ''}`}\n                  placeholder=\"ornek@email.com\"\n                />\n                {errors.email && (\n                  <p className=\"mt-1 text-sm text-red-600\">{errors.email.message}</p>\n                )}\n              </div>\n            </div>\n\n            <div>\n              <label htmlFor=\"password\" className={`block text-sm font-medium ${isDarkMode ? 'text-white' : 'text-gray-700'}`}>\n                Şifre\n              </label>\n              <div className=\"mt-1\">\n                <input\n                  {...register('password')}\n                  type=\"password\"\n                  autoComplete=\"current-password\"\n                  className={`appearance-none block w-full px-3 py-2 border rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm ${\n                    isDarkMode \n                      ? 'bg-gray-700 border-gray-600 text-white' \n                      : 'bg-white border-gray-300 text-gray-900'\n                  } ${errors.password ? 'border-red-500' : ''}`}\n                  placeholder=\"••••••••\"\n                />\n                {errors.password && (\n                  <p className=\"mt-1 text-sm text-red-600\">{errors.password.message}</p>\n                )}\n              </div>\n            </div>\n\n            <div className=\"flex items-center justify-between\">\n              <div className=\"text-sm\">\n                <a href=\"#\" className=\"font-medium text-blue-600 hover:text-blue-500\">\n                  Şifrenizi mi unuttunuz?\n                </a>\n              </div>\n            </div>\n\n            <div>\n              <button\n                type=\"submit\"\n                disabled={isLoading}\n                className={`group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 cursor-pointer whitespace-nowrap ${\n                  isLoading\n                    ? 'bg-gray-400 cursor-not-allowed'\n                    : 'bg-blue-600 hover:bg-blue-700'\n                }`}\n              >\n                {isLoading ? (\n                  <>\n                    <i className=\"ri-loader-4-line animate-spin mr-2\"></i>\n                    Giriş yapılıyor...\n                  </>\n                ) : (\n                  'Giriş Yap'\n                )}\n              </button>\n            </div>\n          </form>\n\n          <div className=\"mt-6\">\n            <div className=\"relative\">\n              <div className=\"absolute inset-0 flex items-center\">\n                <div className={`w-full border-t ${isDarkMode ? 'border-gray-600' : 'border-gray-300'}`} />\n              </div>\n              <div className=\"relative flex justify-center text-sm\">\n                <span className={`px-2 ${isDarkMode ? 'bg-gray-800 text-gray-400' : 'bg-white text-gray-500'}`}>\n                  Test hesapları\n                </span>\n              </div>\n            </div>\n\n            <div className=\"mt-4 space-y-2\">\n              <button\n                onClick={() => handleTestLogin('admin@724parcabul.com', 'Admin123!')}\n                className={`w-full p-3 rounded-md text-left transition-colors cursor-pointer whitespace-nowrap ${isDarkMode ? 'bg-gray-700 hover:bg-gray-600 text-gray-300' : 'bg-gray-50 hover:bg-gray-100 text-gray-600'}`}\n              >\n                <p className=\"text-xs\">\n                  <strong>Admin Hesabı:</strong> admin@724parcabul.com / Admin123!\n                </p>\n              </button>\n              \n              <button\n                onClick={() => handleTestLogin('mehmet.yilmaz@email.com', 'Mehmet123!')}\n                className={`w-full p-3 rounded-md text-left transition-colors cursor-pointer whitespace-nowrap ${isDarkMode ? 'bg-gray-700 hover:bg-gray-600 text-gray-300' : 'bg-gray-50 hover:bg-gray-100 text-gray-600'}`}\n              >\n                <p className=\"text-xs\">\n                  <strong>Kullanıcı Hesabı:</strong> mehmet.yilmaz@email.com / Mehmet123!\n                </p>\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n"],"names":["loginSchema","z.object","z.string","LoginPage","navigate","useNavigate","isDarkMode","setUser","useStore","isLoading","setIsLoading","useState","register","handleSubmit","errors","useForm","zodResolver","onSubmit","data","resolve","credential","toast","error","handleTestLogin","email","password","form","emailInput","passwordInput","jsxs","Link","jsx","Fragment"],"mappings":"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"}